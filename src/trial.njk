<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <title>Let's try to input formulæ</title>
    <style>
        body {
            margin: 1em;
        }
        .target {
            border: solid 1pt #AAA;
            padding: 0.5em;
            min-height: 5em;
        }
        section img {
            max-width: 90%;
        }
        .question {
            margin: 2em
        }
        #top {
            position: fixed;; padding:0.5em;
            background: #DDD;
            top: 0;
            left: 0;
            z-index: 90;
            width: 99%;
            overflow: scroll;
        }

        #concludingQuestions {
            display:none;
            padding: 1.5em;
            z-index: 100;
            position: fixed;
            top: 5%; left: 5%; bottom: 5%; right: 5%;
            border-radius: 3em;
            border-style:inset;
            border-width: 0.5em;
            background: white;
            overflow: scroll;
        }
        #concludingQuestions label {
            white-space: nowrap;
        }

        button {
            font-size: x-large;
        }

        #remainingDisplay {
            font-size: large;
        }


    </style>
</head>
<body>
<nav id="top">
    <table style="width:90%"><tr><td><h1>Trial to input formulæ</h1></td>
    <td align="right"><span id="remainingDisplay"></span></td></tr></table>
    <table border="0" style="width:100%"><tr><td>
<!--        {% for ed in threeEds() %}
        <button onclick="showEditor('{{ed}}')">{{ed.toUpperCase()}}</button>
        {% endfor %} -->
        <span id="startedButtons" style="display:none">
            <button onclick="redisplayInstructions()">Instructions</button>
            <button onclick="redisplayTasks()" disabled="disabled">Tasks</button>
        </span>
    </td><td align="right">
        <span id="startContainer"><button disabled id="startButton" onclick="startTasks()">Let's start!</button></span>
        Token <span id="tokenDisplay">...</span>
    </td>
    </tr></table>

</nav>
<section style="height:7em">&nbsp;</section>


<section id="instructions">
    <p> Your goal is to enter expressions using three different software tools: Wiris, Equatio and Mathlive.<br>
        Please first read the instructions.
        Then, you shall start typing the solutions with the help of the chosen software...</p>
    <p> For each question, you will open the external software using the [O] button on the left.
        You will type the math in the external browser window containing the software and copy/paste it from there
        into the question/answer window  (as "MathML" code or as pictures/screenshots)
        You may quickly create a screenshot of a rectangular part of your
        screen using the shortcut "windows-shift-s" (on Windows) or "Cmd-Shift-4" (on macOS),
        then dragging a rectangular area using your computer mouse.
        This is explained in the video below.
    </p>
    <p style="text-align:center"><video style="width:60%; max-height:50%; border: 1px; background-color: cornflowerblue" poster="/static/Video-Coming-Soon.svg">
        <!-- <source src=""/> -->
        Video coming soon
    </video></p>
    <hr>

    <p> The tools are used in their demo version. Please try each of them first and paste the expressions inside the textbox below.</p>

    <style>
        #toolsGallery {
            width:90%;
        }
        #toolsGallery tr td {
            text-align:center;
            cursor: pointer;
            padding:2em;
        }
        #toolsGallery img {
            height:10em;
            margin:1em;
            padding:0.5em;
            border: bisque 1px solid;
        }
    </style>
    <table id="toolsGallery"><tr>
        <td onclick="showEditor('wiris')"><img src="/static/screenshot-wiris.png" style="height:10em; text-align:center"><br>
            For Wiris, please scroll to the right place, copying is just done using the normal CTRL-C/Cmd-C;
        </td>
        <td onclick="showEditor('equatio')"><img src="/static/screenshot-equatio.png" style="height:10em;text-align:center"><br>
            for equatio, register "with MicroSoft" with your IU account, and exercise screenshot;</td>
        <td onclick="showEditor('mathlive')"><img src="/static/screenshot-mathlive.png" style="height:10em;text-align:center"><br>
            for Mathlive, select all then find the command "Copy MathML" behind the &#8801;&nbsp;menu.</td></tr></table>


    <p><div class="target" contenteditable="true">... please paste here...</div></p>
    <p> We have prepared 5 tasks for which you should copy the math. Process all tasks or
        perform the copy until the time is up (40 minutes are counted automatically).<br>
        Then please click the "finish input" at the very bottom of the page to give your evaluation
        and send the information to us.
    </p>
    <p>
        Thanks so much in advance for your help!
    </p>

</section>



<section id="tasks" style="display:none">

{% for item in range(1,6) %}
<hr>
<div class="question" id="sec-{{item}}">
    <h2>Question {{item}}</h2>
    <p><img src="/static/Q{{item}}.png?built={{builtAt()}}"></p>
    {% for ed in threeEds() %}
    <button onclick="showEditor('{{ed}}')" style="float:left">{{ed.substring(0,2)}}</button><div class="target editor-{{ed}}" title="type with {{ed}}" contenteditable="false">... type here with {{ed}}...</div>
    {% endfor %}
</div>
{% endfor %}

    <p align="right"><button id="finishButton" onclick="finishInput()" disabled>Finish Input</button></p>
</section>


<section  id="concludingQuestions" style="display:none">
    <h1>Thank you!</h1>
    <p>Please also respond to the following questions:</p>
    <table style="width:90%">

        <tr>
            <td>Level:</td><td><fieldset>
                <label><input type="radio" name="level" value="bachelor">Bachelor</label>
                <label><input type="radio" name="level" value="bachelor">Master</label>
            </fieldset>
            </td>
        </tr>
        <tr>
            <td>Domain:</td><td><fieldset>
                <label><input type="radio" name="domain" value="Arch & Design">Arch & Design</label>
                <label><input type="radio" name="domain" value="Economics & Marketing">Economics & Marketing</label>
                <label><input type="radio" name="domain" value="Health">Health</label>
                <label><input type="radio" name="domain" value="Human Resources & Management">Human Resources & Management</label>
                <label><input type="radio" name="domain" value="IT & Tech">IT & Tech</label>
                <label><input type="radio" name="domain" value="Social Work">Social Work</label>
                <label><input type="radio" name="domain" value="Tourism">Tourism</label>
            </fieldset>
            </td>
        </tr>


        <tr>
            <td>How much did you like Equatio?</td><td><fieldset>
                Not at all <input type="radio" name="likedEquatio" value="-3">
                <input type="radio" name="likedEquatio" value="-2">
                <input type="radio" name="likedEquatio" value="-1">
                <input type="radio" name="likedEquatio" value="0">
                <input type="radio" name="likedEquatio" value="1">
                <input type="radio" name="likedEquatio" value="2">
                <input type="radio" name="likedEquatio" value="3"> Super!
            </fieldset>
            </td>
        </tr>
        <tr>
            <td>How much did you like Mathlive?</td><td><fieldset>
                Not at all <input type="radio" name="likedEquatio" value="-3">
                <input type="radio" name="likedMathlive" value="-2">
                <input type="radio" name="likedMathlive" value="-1">
                <input type="radio" name="likedMathlive" value="0">
                <input type="radio" name="likedMathlive" value="1">
                <input type="radio" name="likedMathlive" value="2">
                <input type="radio" name="likedMathlive" value="3"> Super!
            </fieldset>
            </td>
        </tr>
        <tr>
            <td>How much did you like Wiris?</td><td><fieldset>
                Not at all <input type="radio" name="likedWiris" value="-3">
                <input type="radio" name="likedWiris" value="-2">
                <input type="radio" name="likedWiris" value="-1">
                <input type="radio" name="likedWiris" value="0">
                <input type="radio" name="likedWiris" value="1">
                <input type="radio" name="likedWiris" value="2">
                <input type="radio" name="likedWiris" value="3"> Super!
            </fieldset>
            </td>
        </tr>

        <tr><td colspan="2"><hr></td></tr>

        <tr>
            <td>Are you an expert with LaTeX?</td>
            <td><input name="latexExperience" placeholder="???" style="width:100%"></td>
        </tr>

        <tr><td colspan="2"><hr></td></tr>

        <tr>
            <td>Overall feeling on Wiris</td>
            <td><input name="wirisFeeling" placeholder="... " style="width:100%"></td>
        </tr>
        <tr>
            <td>Overall feeling on Equatio</td>
            <td><input name="equatioFeeling" placeholder="..." style="width:100%"></td>
        </tr>
        <tr>
            <td>Overall feeling on Mathlive</td>
            <td><input name="mathliveFeeling" placeholder="..." style="width:100%"></td>
        </tr>
        <tr><td colspan="2"><hr></td></tr>

        <tr>
            <td>Further comments</td>
            <td><input name="furtherComments" placeholder="..." style="width:100%"></td>
        </tr>



        <tr><td></td><td align="right"><button onclick="submitForm()" disabled>submit</button></td></tr>
    </table>
</section>
<script>
    const targets = document.querySelectorAll("div.target");
    const typicalHeaders = { 'Content-Type': 'application/json;charset=utf-8'};
    const editorURLs = {wiris: 'https://demo.wiris.com/mathtype/en/', mathlive: 'https://cortexjs.io/mathlive/demo/', equatio: 'https://equatio.texthelp.com/'}
    let token = null
    let started = null, watcher;
    const startedButtons = document.getElementById("startedButtons");

    for(let target of targets) {
        target.addEventListener("paste", (event) => {
            const clipboardData = (event.clipboardData || window.clipboardData)
            console.log(JSON.stringify(clipboardData.getData("Files")))
            if(clipboardData.getData("image/png") || clipboardData.getData("image.jpeg") || clipboardData.types.indexOf("Files")>-1)
                return;
            event.preventDefault();
            console.log(event)
            console.log("Types", clipboardData.types)
            console.log("Should HTML be read?", clipboardData.getData("text/html"))
            let paste = clipboardData.getData("text");
            if(!/<([a-zA-Z]:)?(math|maction|annotation|annotation-xml|menclose|merror|mfenced|mfrac|mi|mmultiscripts|mn|mo|mover|mpadded|mphantom|mprescripts|mroot|mrow|ms|semantics|mspace|msqrt|mstyle|msub|msup|msubsup|mtable|mtd|mtext|mtr|munder|munderover)[ >]/i.test(paste)) {
                console.log("Not math")
                alert("Not math")
                return
            }

            console.log("pasting")
            if(!/<([a-zA-Z]:)?math[ >]/i.test(paste)) {
                paste = "<math xmlns='http://www.w3.org/1998/Math/MathML'>" + paste + "</math>"
            }
            const selection = window.getSelection();
            if (!selection.rangeCount) return;
            selection.deleteFromDocument();
            console.log(paste)
            const m = document.createElement("p");
            m.innerHTML = paste;
            console.log(m.innerHTML)
            selection.getRangeAt(0).insertNode(m.children[0]);
            selection.collapseToEnd();
        });
    }

    async function startTasks() {
        document.getElementById("startContainer").innerText = "Start " + new Date().toLocaleString()

        startedButtons.style.display="block"
        startedButtons.getElementsByTagName("button")[1].disabled = true

        document.getElementById("instructions").style.display = "none"
        document.getElementById("tasks").style.display = "block"


        for(let e of document.getElementsByClassName("target")) e.setAttribute("contentEditable", "true")
        started = new Date().getTime()
        watcher = window.setInterval(watchForEndTime,100)
    }

    function redisplayInstructions() {
        startedButtons.getElementsByTagName("button")[0].disabled = true
        startedButtons.getElementsByTagName("button")[1].disabled = false
        document.getElementById("instructions").style.display = "block"
        document.getElementById("tasks").style.display = "none"
    }

    function redisplayTasks() {
        startedButtons.getElementsByTagName("button")[0].disabled = false
        startedButtons.getElementsByTagName("button")[1].disabled = true
        document.getElementById("instructions").style.display = "none"
        document.getElementById("tasks").style.display = "block"
    }

    function watchForEndTime() {
        if(!started) return;
        const numMinutesRemain = ((new Date().getTime()-started)/(1000*60))
        if(numMinutesRemain <= 0) {
            window.clearInterval(watcher)
            for(let e of document.getElementsByClassName("target")) e.setAttribute("contentEditable", "false")
            alert("The 40 minutes to enter the expressions are over.\n Please press the finish button on the bottom.")
            document.getElementById("finishButton").scrollIntoView()
        } else {
            let seconds = Math.trunc(60*((40-numMinutesRemain)-Math.trunc(40-numMinutesRemain))) + ""
            if(seconds.length === 1) seconds = "0" + seconds
            document.getElementById("remainingDisplay").innerText = `Time remaining: ${Math.trunc(40-numMinutesRemain)}:${seconds} min.`
        }
    }

    async function finishInput() {
        const obj = {}
        obj["token"] = token
        obj["content"] = sanitize(document.documentElement.outerHTML)

        let response = await fetch("/app/upload/", {method: "POST",
            body: JSON.stringify(obj),
            headers: typicalHeaders,
        })
        if(response.statusText!=="OK") {
            alert("Error, please try again (" + response.statusText + ").")
        } else {
            document.getElementById("concludingQuestions").style.display = "block"
        }
    }

    const editorWindows = {}
    function showEditor(name) {
        name = name.toLowerCase()
        if(editorWindows[name] && !editorWindows[name].closed)
            editorWindows[name].focus()
        else
            editorWindows[name] = window.open(editorURLs[name], name, "popup")
    }

    async function aquireToken() {
        let res = await fetch("/app/init", {method:"POST"})
        let json = await res.json()
        token = json.token
        console.log("Token " + token)
        for (let b of document.getElementsByTagName("button"))  b.removeAttribute("disabled")
        document.getElementById("tokenDisplay").innerText = token
    }

    async function submitForm() {
        const responseObj = {token: token}
        for(let i of document.getElementsByTagName("input")) {
            responseObj[i.name] = i.value
        }
        let resp = await fetch("/app/respond", {method: "POST", body: JSON.stringify(responseObj), headers: typicalHeaders})
        let result = await resp.json()
        if(result.ok) {
            document.getElementById("concludingQuestions").innerHTML = `<h1>Done!</h1><p>Thank you for your collaboration.</p><p>We have received data for token ${token}.</p>`
        } else {
            alert("Error, please try again (" + JSON.stringify(result) + ")")
        }
    }

    function sanitize(str) {
        str = str.replaceAll('contenteditable="true"', 'contenteditable="false"')
        str = str.replace('id="instructions"', 'id="instructions" style="display:none"')
        str = str.replace("Token ", "(" + (Math.trunc((new Date().getTime()-started)/1000)) + "s) Token ")
        let a = str.indexOf(`<script>`);
        let b = str.indexOf(`</` + `script>`) + 3+ 6;
        return str.substring(0, a) + str.substring(b)
    }

    window.addEventListener("load", aquireToken)
</script>
</body>
</html>